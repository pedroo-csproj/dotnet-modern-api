trigger:
  - develop

variables:
  - group: 'production'

pool:
  vmImage: 'ubuntu-22.04'

stages:
  - stage: 'deploy_infrastructure'
    displayName: 'Deploy Infrastructure'
    jobs:
    - job: 'run_terraform'
      displayName: 'Run Terraform'
      continueOnError: false
      steps:
      - task: replacetokens@5
        displayName: 'Replace Variables'
        inputs:
          rootDirectory: '$(System.DefaultWorkingDirectory)/infrastructure'
          targetFiles: 'terraform.tfvars'
          encoding: 'auto'
          tokenPattern: 'default'
          writeBOM: true
          actionOnMissing: 'fail'
          keepToken: false
          actionOnNoFiles: 'continue'
          enableTransforms: false
          enableRecursion: false
          useLegacyPattern: false
          enableTelemetry: true

      - task: TerraformTaskV4@4
        displayName: 'Init Terraform'
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure'
          backendServiceArm: '$(Subscription)'
          backendAzureRmResourceGroupName: '$(CoreResourceGroupName)'
          backendAzureRmStorageAccountName: '$(CoreResourceGroupStorageAccountName)'
          backendAzureRmContainerName: '$(CoreResourceGroupStorageAccountContainerName)'
          backendAzureRmKey: '$(CoreResourceGroupStorageAccountKey)'

      - task: TerraformTaskV4@4
        displayName: 'Apply Terraform'
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure'
          environmentServiceNameAzureRM: '$(Subscription)'
