trigger:
  - develop

variables:
  - group: 'production'

pool:
  vmImage: 'ubuntu-22.04'

stages:
  - stage: 'test_services'
    displayName: 'Test Services'
    jobs:
    - job: 'api'
      displayName: 'API'
      continueOnError: false
      steps:
        - task: DotNetCoreCLI@2
          displayName: 'Test'
          inputs:
            command: 'test'
            projects: '**/*.csproj'
            arguments: '-c Test'
            workingDirectory: '$(System.DefaultWorkingDirectory)/src/tests'
            
  - stage: 'build_services'
    displayName: 'Build Services'
    jobs:
      - job: 'api'
        displayName: 'API'
        steps:
        - task: replacetokens@5
          displayName: 'Replace AppSettings Tokens'
          inputs:
            rootDirectory: '$(System.DefaultWorkingDirectory)/src/DotNETModernAPI.Presentation'
            targetFiles: 'appsettings.Production.json'
            encoding: 'auto'
            tokenPattern: 'default'
            writeBOM: true
            actionOnMissing: 'fail'
            keepToken: false
            actionOnNoFiles: 'fail'
            enableTransforms: false
            enableRecursion: false
            useLegacyPattern: false
            enableTelemetry: true

        - task: Docker@2
          displayName: 'Docker Build and Push'
          inputs:
            containerRegistry: '$(ContainerRegistryName)'
            repository: '$(ContainerRepositoryName)'
            command: 'buildAndPush'
            Dockerfile: '$(System.DefaultWorkingDirectory)/src/DotNETModernAPI.Presentation/Dockerfile'
            buildContext: '$(System.DefaultWorkingDirectory)/src'
            tags: |
              latest
              $(Build.BuildId)

  - stage: 'deploy_services'
    displayName: 'Deploy Services'
    jobs:
      - job: 'api'
        displayName: 'API'
        steps:

        - task: AzureRmWebAppDeployment@4
          displayName: 'Deploy to AppService'
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: '$(Subscription)'
            appType: 'webAppContainer'
            WebAppName: '$(AppServiceName)'
            DockerNamespace: '$(ContainerRegistryName).azurecr.io'
            DockerRepository: '$(ContainerRepositoryName)'
            DockerImageTag: 'latest'
